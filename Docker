# Build stage - using official Maven with Temurin JDK 21
FROM maven:3.9.6-eclipse-temurin-21 AS builder

WORKDIR /build
# Copy just the POM first to cache dependencies
COPY pom.xml .
# Download dependencies (faster rebuilds when only code changes)
RUN mvn dependency:go-offline -B

# Copy source code and build
COPY src ./src
RUN mvn clean package -DskipTests -B && \
    # Verify the JAR exists (debugging helper)
    ls -l /build/target/

# Runtime stage - using slim JRE image
FROM eclipse-temurin:21-jre-jammy

WORKDIR /app
# Copy the built JAR (using wildcard to avoid name mismatch)
COPY --from=builder /build/target/*.jar app.jar

# Install minimal dependencies for wait-for-it
RUN apt-get update && \
    apt-get install -y --no-install-recommends wget && \
    wget -O /wait-for-it.sh https://github.com/vishnubob/wait-for-it/raw/master/wait-for-it.sh && \
    chmod +x /wait-for-it.sh && \
    apt-get remove -y wget && \
    apt-get autoremove -y && \
    rm -rf /var/lib/apt/lists/*

# Health check (optional but recommended)
HEALTHCHECK --interval=30s --timeout=3s \
    CMD curl -f http://localhost:8080/actuator/health || exit 1

# Runtime configuration
EXPOSE 8080
ENV JAVA_OPTS="-Xmx512m -Xms256m"
USER 1001

ENTRYPOINT ["sh", "-c", "java ${JAVA_OPTS} -jar app.jar"]
